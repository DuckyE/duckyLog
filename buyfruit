local SELECTED_FRUITS = {
    Strawberry=true, Blueberry=false, Watermelon=false, Apple=false, Orange=false,
    Corn=false, Banana=false, Grape=false, Pear=false, Pineapple=false,
    GoldMango=true, BloodstoneCycad=true, ColossalPinecone=true, VoltGinkgo=true,
    DeepseaPearlFruit=true,
}

local BUDGET_PER_TICK = 50000000
local TICK_EVERY = 1.0
local MAX_PER_FRUIT_PER_TICK = 1

local VERBOSE, START_STOP_TOAST, PURCHASE_TOAST = true, true, true
local SEND_TO_DISCORD = true
local WEBHOOK_URL = "https://discord.com/api/webhooks/1419111758051672236/-UtONg5EotVTM2RusXQ5RH5drjJzvt4NwcfmKYaIp6jhKKMMNpewS00aStGiJCa_7P9D"

local FRUIT_DATA = {
    Strawberry={Price="5,000"}, Blueberry={Price="20,000"}, Watermelon={Price="80,000"},
    Apple={Price="400,000"}, Orange={Price="1,200,000"}, Corn={Price="3,500,000"},
    Banana={Price="12,000,000"}, Grape={Price="50,000,000"}, Pear={Price="200,000,000"},
    Pineapple={Price="600,000,000"}, GoldMango={Price="2,000,000,000"},
    BloodstoneCycad={Price="8,000,000,000"}, ColossalPinecone={Price="40,000,000,000"},
    VoltGinkgo={Price="80,000,000,000"}, DeepseaPearlFruit={Price="40,000,000,000"},
}

local FRUIT_EMOJI = {
    Strawberry="üçì", Blueberry="ü´ê", Watermelon="üçâ", Apple="üçé", Orange="üçä",
    Corn="üåΩ", Banana="üçå", Grape="üçá", Pear="üçê", Pineapple="üçç",
    GoldMango="ü•≠", BloodstoneCycad="üåø", ColossalPinecone="üå≤", VoltGinkgo="‚ö°",
    DeepseaPearlFruit="ü¶™"
}
local FRUIT_LABEL = { DeepseaPearlFruit="Deepsea Pearl Fruit" }
local function labelOf(id) return FRUIT_LABEL[id] or id end
local function fruitIcon(id) return FRUIT_EMOJI[id] or "" end

local Players=game:GetService("Players")
local ReplicatedStorage=game:GetService("ReplicatedStorage")
local StarterGui=game:GetService("StarterGui")
local HttpService=game:GetService("HttpService")
local LocalPlayer=Players.LocalPlayer

local function parsePrice(p) if type(p)=="number" then return p end
    local s=type(p)=="string" and p or "0"; s=s:gsub(",",""):gsub("%s+",""); return tonumber(s) or 0 end
local function comma(n) n=tonumber(n) or 0; local s=tostring(math.floor(n)); local k
    repeat s,k=s:gsub("^(-?%d+)(%d%d%d)","%1,%2") until k==0; return s end
local function notify(title,text,d) pcall(function()
    StarterGui:SetCore("SendNotification",{Title=tostring(title),Text=tostring(text),Duration=d or 3}) end)
    local line=("[AutoBuyFruit] %s - %s"):format(title,text); if rconsoleprint then rconsoleprint(line.."\n") else print(line) end end
local function getNetWorth()
    local lp=LocalPlayer; if not lp then return 0 end
    local a=lp:GetAttribute("NetWorth"); if type(a)=="number" then return a end
    local ls=lp:FindFirstChild("leaderstats"); local v=ls and ls:FindFirstChild("NetWorth")
    return (v and type(v.Value)=="number") and v.Value or 0
end
local function nameVariants(id)
    local spaced=id:gsub("(%l)(%u)","%1 %2"):gsub("(%u)(%u%l)","%1 %2")
    local under=spaced:gsub("%s+","_")
    return {id,id:lower(),id:upper(),under,under:lower(),spaced,spaced:lower(),spaced:gsub("%s+","")}
end
local function getFoodStoreLST()
    local pg=LocalPlayer and LocalPlayer:FindFirstChild("PlayerGui"); if not pg then return nil end
    local data=pg:FindFirstChild("Data"); if not data then return nil end
    local store=data:FindFirstChild("FoodStore"); if not store then return nil end
    return store:FindFirstChild("LST")
end
local function fruitInStock(fruitId)
    local lst=getFoodStoreLST(); if not lst then return false end
    for _,k in ipairs(nameVariants(fruitId)) do
        local a=lst:GetAttribute(k); if type(a)=="number" and a>0 then return true end
        local lbl=lst:FindFirstChild(k)
        if lbl and lbl:IsA("TextLabel") then local num=tonumber((lbl.Text or ""):match("%d+")); if num and num>0 then return true end end
    end; return false
end
local function fireBuyFruit(fruitId)
    local ok,err=pcall(function() ReplicatedStorage:WaitForChild("Remote"):WaitForChild("FoodStoreRE"):FireServer(fruitId) end)
    return ok,err
end

-- ===== Discord embed (‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏ß‡∏¢) =====
local function getRequestFunc()
    return (syn and syn.request) or request or http_request or (fluxus and fluxus.request) or (krnl and krnl.request) or (http and http.request)
end
local function sendDiscord(payload)
    if not SEND_TO_DISCORD or WEBHOOK_URL=="" then return end
    local req=getRequestFunc(); if not req then return end
    pcall(function() req({Url=WEBHOOK_URL,Method="POST",Headers={["Content-Type"]="application/json"},Body=HttpService:JSONEncode(payload)}) end)
end
local function sendPurchaseCard(id, price)
    local player=(LocalPlayer and (LocalPlayer.DisplayName~="" and LocalPlayer.DisplayName or LocalPlayer.Name)) or "Player"
    local embed = {
        author = { name = player },
        title  = "üõçÔ∏è Fruit Purchased!",
        color  = 0x2ECC71,
        fields = {
            { name = "üë§ Player", value = "`"..player.."`", inline = true },
            { name = "üçé Fruit",  value = "`"..fruitIcon(id).." "..labelOf(id).."`", inline = true },
            { name = "ü™ô Price",  value = "`‡∏ø"..comma(price).."`", inline = true },
        },
        footer = { text = "Auto Buy Fruit" }
    }
    sendDiscord({embeds={embed}})
end
-- ==========================================

local RUNNING=true
if START_STOP_TOAST then notify("üçé Auto Buy Fruit","üü¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‚úÖ",3) end
print("[AutoBuyFruit] started. Call _G.StopAutoBuyFruit() to stop.")

task.spawn(function()
    while RUNNING do
        local budgetLeft=BUDGET_PER_TICK
        local netWorth=getNetWorth()

        local wanted={}
        for id,on in pairs(SELECTED_FRUITS) do
            if on and FRUIT_DATA[id] then table.insert(wanted,{id=id,price=parsePrice(FRUIT_DATA[id].Price)}) end
        end
        table.sort(wanted,function(a,b) return a.price<b.price end)

        for _,item in ipairs(wanted) do
            if budgetLeft<=0 then break end
            if item.price<=0 or netWorth<item.price or not fruitInStock(item.id) then continue end

            local bought=0
            while bought<MAX_PER_FRUIT_PER_TICK and budgetLeft>=item.price and netWorth>=item.price do
                local ok,err=fireBuyFruit(item.id)
                if not ok then
                    if VERBOSE then notify("‚ùå ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",labelOf(item.id).." ("..tostring(err)..")",3) end
                    break
                end
                bought=bought+1
                budgetLeft=budgetLeft-item.price
                netWorth=netWorth-item.price

                if VERBOSE and PURCHASE_TOAST then
                    notify("‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",labelOf(item.id).." ‡∏ø"..comma(item.price),2)
                end
                sendPurchaseCard(item.id, item.price)
                task.wait(0.2)
            end
        end

        task.wait(TICK_EVERY)
    end
end)

_G.StopAutoBuyFruit=function()
    if RUNNING then RUNNING=false
        if START_STOP_TOAST then notify("üçé Auto Buy Fruit","üî¥ ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‚õî",3) end
    end
end
